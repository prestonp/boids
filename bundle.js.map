{"version":3,"sources":["webpack:///webpack/bootstrap c7f3b5a6bff09b72a370","webpack:///./main.js","webpack:///./lib/simulator.js","webpack:///./lib/boid.js","webpack:///./lib/vector.js","webpack:///./lib/gfx.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;;;;;;ACtFA;AACA;AACA;AACA;;AAEA;;;;;;;ACLA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3CA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c7f3b5a6bff09b72a370\n **/","const Simulator = require('./lib/simulator');\nconst Gfx = require('./lib/gfx');\n\nlet boids = Simulator.initBoids();\n\nfunction loop() {\n  setTimeout(() => {\n    window.requestAnimationFrame(loop);\n  }, 1);\n  Gfx.drawBoids(boids);\n  Simulator.moveBoids(boids);\n}\n\nloop();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./main.js\n ** module id = 0\n ** module chunks = 0\n **/","const Boid = require('./boid');\nconst Vector = require('./vector');\nconst MAX_BOIDS = 100;\n\nfunction randPos(width=window.innerWidth, height=window.innerHeight) {\n  const x = Math.random() * width;\n  const y = Math.random() * height;\n  return new Vector(x,y);\n}\n\nfunction rule1(boid, idx, boids) {\n  // Calculate perceived center of swarm (excluding current boid)\n  const center = boids.reduce((total, b, i) => {\n    if (i !== idx) {\n      total = total.add(b.pos);\n    }\n    return total;\n  }, new Vector(0, 0));\n\n  const n = boids.length - 1;\n\n  center.x /= n;\n  center.y /= n;\n\n  return center.sub(boid.pos).div(100);\n}\n\nfunction rule2(boid, idx, boids) {\n  let c = new Vector(0, 0);\n\n  boids.forEach((b, i) => {\n    if (i !== idx) {\n      let diff = b.pos.sub(boid.pos);\n      if (diff.mag() < 10)\n        c = c.sub(diff);\n    }\n  });\n\n  return c;\n}\n\nfunction rule3(boid, idx, boids) {\n  let vel = new Vector(0, 0);\n\n  boids.forEach((b, i) => {\n    if (idx !== i) {\n      vel.add(b.vel);\n    }\n  });\n\n  vel = vel.div(boids.length-1);\n  return vel.sub(boid.vel).div(8);\n}\n\nfunction limitVel(vel, limit) {\n  const mag = vel.mag();\n\n  if (mag > limit)\n    return vel.div(mag).mul(limit);\n  return vel;\n}\n\nconst Simulator = {\n  initBoids: function() {\n    const boids = [];\n    for(let i=0; i<MAX_BOIDS; i++) {\n      const pos = randPos();\n      const vel = new Vector(0, 0);\n      boids.push(new Boid(pos, vel));\n    }\n    return boids;\n  },\n\n  moveBoids: function(boids) {\n    boids = boids.forEach((boid, idx) => {\n      let v1 = rule1(boid, idx, boids);\n      let v2 = rule2(boid, idx, boids);\n      let v3 = rule3(boid, idx, boids);\n      boid.vel = boid.vel.add(v1, v2, v3);\n      boid.vel = limitVel(boid.vel, 10);\n      boid.pos = boid.pos.add(boid.vel);\n    });\n    return boids;\n  }\n};\n\nmodule.exports = Simulator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/simulator.js\n ** module id = 1\n ** module chunks = 0\n **/","var Boid = function(pos, vel) {\n  this.pos = pos;\n  this.vel = vel;\n};\n\nmodule.exports = Boid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/boid.js\n ** module id = 2\n ** module chunks = 0\n **/","const Vector = function(x, y) {\n  this.x = x;\n  this.y = y;\n};\n\nfunction operator(op) {\n  return function(...args) {\n    const { x, y } = this;\n\n    if (Array.isArray(args[0]))\n      args = args[0];\n\n    return args.reduce((total, vector) => {\n      if (op === '+') {\n        total.x += vector.x;\n        total.y += vector.y;\n      } else if (op === '-') {\n        total.x -= vector.x;\n        total.y -= vector.y;\n      }\n      return total;\n    }, new Vector(x, y));\n  };\n}\n\nfunction scalar(op) {\n  return function(val) {\n    if (op === '*') {\n      return new Vector(this.x * val, this.y * val);\n    } else if (op === '/') {\n      return new Vector(this.x / val, this.y / val);\n    }\n  };\n}\n\nVector.prototype.add = operator('+');\nVector.prototype.sub = operator('-');\nVector.prototype.mul = scalar('*');\nVector.prototype.div = scalar('/');\nVector.prototype.mag = function() {\n  return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n};\n\nmodule.exports = Vector;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/vector.js\n ** module id = 3\n ** module chunks = 0\n **/","let canvas = document.getElementById('boids');\nlet ctx = canvas.getContext('2d');\n\ncanvas.width  = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nconst width = 5;\nconst height = 5;\n\nconst Gfx = {\n  drawBoids: function(boids) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    boids.forEach((boid) => {\n      const { x, y } = boid.pos;\n      ctx.fillStyle = \"rgb(200,0,0)\";\n      ctx.fillRect(x, y, width, height);\n    });\n    return boids;\n  }\n};\n\nmodule.exports = Gfx;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gfx.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}